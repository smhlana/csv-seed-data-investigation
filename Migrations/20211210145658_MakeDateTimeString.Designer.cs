// <auto-generated />
using System;
using ExcelSeedData.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExcelSeedData.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211210145658_MakeDateTimeString")]
    partial class MakeDateTimeString
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExcelSeedData.Data.Entities.Icd10", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AgeRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Chapter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChapterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icd103Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icd103CodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icd10Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.Property<string>("SaEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaRevisionHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SaStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValidIcd10Asterix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValidIcd10ClinicalUse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValidIcd10Dagger")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValidIcd10Primary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValidIcd10Sequelae")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhoEndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhoFullDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhoRevisionHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhoStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Icd10Codes");

                    b.HasData(
                        new
                        {
                            Id = "bb314dc3-1d0e-4e70-b2d3-7fae76f09233",
                            Chapter = "Chapter 1",
                            Number = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
